import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as n,a}from"./app-fd217ae5.js";const e={},o=a(`<h2 id="编辑模式" tabindex="-1"><a class="header-anchor" href="#编辑模式" aria-hidden="true">#</a> 编辑模式</h2><p>在微信公众平台提供的后台管理系统中，可以进行以下操作：</p><ul><li>设置消息自动回复</li><li>自定义菜单的创建</li><li>主动推送消息给用户</li><li>编辑素材</li></ul><h2 id="微信公众号开发模式" tabindex="-1"><a class="header-anchor" href="#微信公众号开发模式" aria-hidden="true">#</a> 微信公众号开发模式</h2><p>基于微信公众平台的接口开发模式</p><ol><li>用户在公众号内向公众号发送消息</li><li>微信服务器在接收到用户发送消息之后，将消息通过开发者提供的接口发送给开发者服务器</li><li>开发者服务器接收到消息之后，进行相关的业务处理，将处理结果返回给微信服务器</li><li>微信服务器再通过消息的形式将开发者服务器返回的内容展示给用户 公众号内页开发</li><li>用户通过公众号内的菜单，或者通过消息中的超链接直接向开发者服务器发送网页请求</li><li>开发者服务器像正常处理普通网页请求一样做出相应</li></ol><h2 id="开启公众号开发者模式" tabindex="-1"><a class="header-anchor" href="#开启公众号开发者模式" aria-hidden="true">#</a> 开启公众号开发者模式</h2><p>开发-基本配置-服务器配置-修改配置<br> 微信服务器给开发者发送的<code>get</code>请求的携带参数信息：<code>signatature</code>微信加密签名，<code>timestamp</code>时间戳，<code>nonce</code>随机数，<code>echostr</code>随机字符串<br> 开发者服务器接收到微信服务器发送来的<code>get</code>请求之后，首先需要对请求是否来源于微信服务器进行校验(签名校验)，校验方式：</p><ol><li>获取<code>get</code>请求参数中的<code>timestap</code>,<code>nonce</code>两个参数值，将这两个参数和<code>token</code>(之前在配置页面中的<code>token</code>)放到一个数组中</li><li>对数组元素进行字典排序</li><li>把数组中的三个元素拼接成字符串</li><li>使用 sha1 进行加密，获取加密后的签名</li><li>对比自己获取到的签名和<code>GET</code>请求参数中<code>singnature</code>是否一致，如果一致则证明校验成功;调用<code>wx.config({})</code></li></ol><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">npm i http</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">server </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">g</span></span>
<span class="line"><span style="color:#ABB2BF;">hs </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">o</span></span>
<span class="line"><span style="color:#ABB2BF;">hs </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">o </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">p </span><span style="color:#D19A66;">8888</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="xml2js" tabindex="-1"><a class="header-anchor" href="#xml2js" aria-hidden="true">#</a> xml2js</h2><p>由于微信发给服务器的消息是<code>xml</code>格式的，所以需要从中提取出来有用的信息，必须先对<code>xml</code>格式进行解析</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">npm install xml2js </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">S</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">xml2js</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;xml2js&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//创建一个将js对象转换成xml的工具对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//创建这个对象的时候可以传递参数，改变一些内容，rootName改变最终生成的xml代码的根节点的名称;cdata这个会在必要的时候为节点加上&lt;![CDATA[]]&gt;;headless这个参数可以去掉doctype</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">builder</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">xml2js</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//创建一个将xml字符串转换成js对象的工具对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//创建这个对象的时候可以传递参数，设置一些功能，explicitArray默认是true，会将所有的内容全部以数组的形式存放，设置为false只会在有多个内容的时候存成数组</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">parser</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">xml2js</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Parse</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">explicitArray</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//将一个xml字符串转换成js对象</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">xmlStr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&lt;xml&gt;&lt;ToUserName&gt;&lt;![CDATA[toUser]]&gt;&lt;/ToUserName&gt;&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">parser</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parseString</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">xmlStr</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">resilt</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//将一个对象转换成xml字符串</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;zs&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">xml</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">builder</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">buildObject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),p=[o];function c(r,t){return l(),n("div",null,p)}const d=s(e,[["render",c],["__file","公众号.html.vue"]]);export{d as default};
