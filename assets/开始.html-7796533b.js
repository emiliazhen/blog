const e=JSON.parse('{"key":"v-4b08c873","path":"/react/%E5%BC%80%E5%A7%8B.html","title":"开始","lang":"zh-CN","frontmatter":{"title":"开始","date":"2017-04-08T00:00:00.000Z","category":"react","order":1,"icon":"react"},"headers":[{"level":2,"title":"虚拟 DOM","slug":"虚拟-dom","link":"#虚拟-dom","children":[]},{"level":2,"title":"diff 算法","slug":"diff-算法","link":"#diff-算法","children":[]},{"level":2,"title":"React 项目创建","slug":"react-项目创建","link":"#react-项目创建","children":[]},{"level":2,"title":"jsx 语法","slug":"jsx-语法","link":"#jsx-语法","children":[{"level":3,"title":"jsx 列表渲染","slug":"jsx-列表渲染","link":"#jsx-列表渲染","children":[]},{"level":3,"title":"jsx 条件渲染","slug":"jsx-条件渲染","link":"#jsx-条件渲染","children":[]},{"level":3,"title":"jsx 样式处理","slug":"jsx-样式处理","link":"#jsx-样式处理","children":[]}]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[{"level":3,"title":"使用ES5构造函数的方式创建组件","slug":"使用es5构造函数的方式创建组件","link":"#使用es5构造函数的方式创建组件","children":[]},{"level":3,"title":"组件传值","slug":"组件传值","link":"#组件传值","children":[]},{"level":3,"title":"使用ES6创建组件","slug":"使用es6创建组件","link":"#使用es6创建组件","children":[]},{"level":3,"title":"ES6 组件传值","slug":"es6-组件传值","link":"#es6-组件传值","children":[]}]}],"git":{},"readingTime":{"minutes":4.97,"words":1492},"filePathRelative":"react/开始.md","localizedDate":"2017年4月8日","excerpt":"<h2> 虚拟 DOM</h2>\\n<p>每个页面在渲染的时候，在内存中会生成一个对应的对象；当页面发生改变需要重新渲染时，会在内存中重新一个对应的对象；当页面需要重新渲染时，会对比两个对象，找到有差异的地方，页面重新渲染时只去渲染发生了改变的地方</p>\\n<h2> diff 算法</h2>\\n<p>| &nbsp;         | &nbsp;                                                                                                                                                                        |\\n| :------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------- |\\n| tree diff      | 新旧 DOM 树，逐层对比的方式，就叫做 tree diff，每当我们从前到后，把所有层的节点对比完后，必然能够找到那些需要被更新的元素；                                                   |\\n| component diff | 在对比每一层的时候，组件直接的对比叫做 component diff；当对比组件的时候，如果两个组件的类型相同，则暂时认为这个组件不需要被更新，如果组件类型不同，则立即将旧组件移除，新建一 | 个组件，替换到被移除的位置 |\\n| element diff   | 在组件中，每个元素之间也要进行对比，元素级别的对比叫做 element diff；                                                                                                         |\\n| key            | 这个属性可以把页面上的 DOM 节点和虚拟 DOM 中的对象做一层关联关系                                                                                                              |</p>"}');export{e as data};
