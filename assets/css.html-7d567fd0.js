const e=JSON.parse('{"key":"v-046160f5","path":"/consolidate/css.html","title":"巩固css","lang":"zh-CN","frontmatter":{"title":"巩固css","date":"2021-08-22T00:00:00.000Z","order":2,"icon":"css"},"headers":[{"level":2,"title":"rem 原理","slug":"rem-原理","link":"#rem-原理","children":[]},{"level":2,"title":"实现三栏布局","slug":"实现三栏布局","link":"#实现三栏布局","children":[]},{"level":2,"title":"BFC（块级格式化上下文）","slug":"bfc-块级格式化上下文","link":"#bfc-块级格式化上下文","children":[{"level":3,"title":"BFC 的原理 其实也就是 BFC 的渲染规则（能说出以下四点就够了）。包括：","slug":"bfc-的原理-其实也就是-bfc-的渲染规则-能说出以下四点就够了-。包括","link":"#bfc-的原理-其实也就是-bfc-的渲染规则-能说出以下四点就够了-。包括","children":[]},{"level":3,"title":"如何生成 BFC","slug":"如何生成-bfc","link":"#如何生成-bfc","children":[]},{"level":3,"title":"BFC 应用","slug":"bfc-应用","link":"#bfc-应用","children":[]}]},{"level":2,"title":"flex","slug":"flex","link":"#flex","children":[]}],"git":{},"readingTime":{"minutes":2.13,"words":640},"filePathRelative":"consolidate/css.md","localizedDate":"2021年8月22日","excerpt":"<h2> rem 原理</h2>\\n<ul>\\n<li><code>rem</code>布局的本质是等比缩放，一般是基于宽度，假设将屏幕宽度分为<code>100</code>份，每份宽度是<code>1rem</code>，<code>1rem</code>的宽度是<code>屏幕宽度/100</code>,，然后子元素设置<code>rem</code>单位的属性， 通过改变<code>html</code>元素的字体大小，就可以设置子元素的实际大小。</li>\\n<li><code>rem</code>布局加载闪烁的问题\\n解决方案，媒体查询设置根元素字体大小，比如设计稿是<code>750px</code>;对应的开发方式是<code>1rem=100px</code>,那<code>375px</code>的<code>font-size</code> 大小就是<code>50px</code>（具体方法可以百度一下）</li>\\n<li>比<code>rem</code>更好的方案（缺点兼容不好）\\n<code>vw</code>(<code>1vw</code>是视口宽度的<code>1%</code>，<code>100vw</code>就是视口宽度),<code>vh</code>(<code>100vh</code>就是视口高度)</li>\\n</ul>"}');export{e as data};
