const e=JSON.parse('{"key":"v-c6505d90","path":"/canvas/threejs/threejs.html","title":"three.js","lang":"zh-CN","frontmatter":{"title":"three.js","date":"2022-07-05T00:00:00.000Z","category":"canvas"},"headers":[{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"缺点","slug":"缺点","link":"#缺点","children":[]},{"level":2,"title":"与Babylon.js对比","slug":"与babylon-js对比","link":"#与babylon-js对比","children":[]},{"level":2,"title":"创建渲染器","slug":"创建渲染器","link":"#创建渲染器","children":[]},{"level":2,"title":"创建相机","slug":"创建相机","link":"#创建相机","children":[]},{"level":2,"title":"创建场景","slug":"创建场景","link":"#创建场景","children":[]},{"level":2,"title":"创建第一个模型","slug":"创建第一个模型","link":"#创建第一个模型","children":[]},{"level":2,"title":"动画","slug":"动画","link":"#动画","children":[]},{"level":2,"title":"性能检测插件","slug":"性能检测插件","link":"#性能检测插件","children":[]}],"git":{},"readingTime":{"minutes":7.18,"words":2153},"filePathRelative":"canvas/threejs/threejs.md","localizedDate":"2022年7月5日","excerpt":"<h2> 特点</h2>\\n<p><code>Three.js</code>作为<code>WebGL</code>框架中的佼佼者，由于它的易用性和扩展性，使得它能够满足大部分的开发需求。<br>\\n<code>Three.js</code>掩盖了<code>3D</code>渲染的细节：<code>Three.js</code>将<code>WebGL</code>原生<code>API</code>的细节抽象化，将<code>3D</code>场景拆解为网格、材质和光源(即它内置了图形编程常用的一些对象种类)。</p>\\n<ul>\\n<li>面向对象：开发者可以使用上层的<code>JavaScript</code>对象，而不是仅仅调用<code>JavaScript</code>函数。</li>\\n<li>功能非常丰富：<code>Three.js</code>除了封装了<code>WebGL</code>原始<code>API</code>之外，<code>Three.js</code>还包含了许多实用的内置对象，可以方便地应用于游戏开发、动画制作、幻灯片制作、髙分辨率模型和一些特殊的视觉效果制作。</li>\\n<li>速度很快：<code>Three.js</code>采用了<code>3D</code>图形最佳实践来保证在不失可用性的前提下，保持极高的性能。</li>\\n<li>支持交互：<code>WebGL</code>本身并不提供拾取（<code>picking</code>)功能（即是否知道鼠标正处于某个物体上）。而<code>Three.js</code>则固化了拾取支持，这就使得你可以轻松为你的应用添加交互功能。</li>\\n<li>包含数学库：<code>Three.js</code>拥有一个强大易用的数学库，你可以在其中进行矩阵、投影和矢量运算。</li>\\n<li>内置文件格式支持：你可以使用流行的 3D 建模软件导出文本格式的文件，然后使用<code>Three.js</code>加载；也可以使用<code>Three.js</code>自己的<code>JSON</code>格式或二进制格式。</li>\\n<li>扩展性很强：为<code>Three.js</code>添加新的特性或进行自定义优化是很容易的事情。如果你需要某个特殊的数据结构，那么只需要封装到<code>Three.js</code>即可。</li>\\n</ul>"}');export{e as data};
