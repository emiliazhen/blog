import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as c,c as i,b as e,d as o,e as d,a as l}from"./app-fd217ae5.js";const t={},r=l('<h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h2><ul><li>跨平台：至少跨<code>Linux</code>、<code>Android</code>、<code>IOS</code>、<code>Fuchsia</code>，甚至支持嵌入式开发</li><li>原生用户界面：原生的，有更好的体验更好的性能</li><li>开源免费</li><li>120fps 超高性能，采用 GPU 渲染技术</li><li>生态：插件丰富</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><ol><li>在环境变量用户变量里加入变量</li><li>安装<code>Git</code>，安装<code>JAVA</code></li></ol>',4),p={href:"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html",target:"_blank",rel:"noopener noreferrer"},u=l("<li>新建环境变量<code>JAVA_HOME</code>，值为<code>JDK</code>安装目录，<code>D:\\Java\\jdk1.8.0_102</code></li><li>新建环境变量<code>CLASSPATH</code>，值为<code>%JAVA_HOME%/lib/tools.jar;%JAVA_HOME%/lib/dt.jar</code></li><li>设置完成后可以在终端执行<code>java -version</code>查看版本</li>",3),h=l(`<ol start="3"><li>获取<code>Flutter SDK</code>，在<code>C:/flutter</code>中</li></ol><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">git clone </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">b master https:</span><span style="color:#56B6C2;">//github.com/</span><span style="color:#ABB2BF;">flutter</span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;">flutter.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在拉取的文件下找到<code>flutter_console.bat</code></li><li>将<code>flutter\\bin</code>的全路径加入到用户变量的<code>Path</code>中</li></ul><ol start="4"><li><code>PowerShell</code>运行<code>flutter doctor</code>，命令输入<code>flutter doctor --android-licenses</code>一律选 y 安装证书</li><li>安装<code>Android Studio</code></li></ol>`,4),m=e("li",null,[e("code",null,"Settings"),o(" => "),e("code",null,"Plugins"),o(" => "),e("code",null,"flutter"),o(" => "),e("code",null,"install"),o(" 安装插件")],-1),_={href:"https://github.com/pingfangx/TranslatorX",target:"_blank",rel:"noopener noreferrer"},v=e("code",null,"resources_zh_cn_<软件名>_<版本>.jar",-1),b=e("code",null,"lib",-1),g=l("<li>设置安卓模拟器 <ul><li>在<code>Android Studio</code>打开<code>AVD Manager</code>，并选择<code>Create Virtual Device</code></li><li>选择一个设备并选择<code>Next</code></li><li>为要模拟的<code>Android</code>版本选择一个或多个系统镜像，建议使用<code>x86</code>或<code>x86_image</code></li><li>在<code>Emulated Performance</code>下选择<code>Hardware-GLES 2.0</code>以启用硬件加速</li></ul></li>",1),y=l(`<ol start="6"><li><code>VsCode</code>中，插件安装<code>flutter</code></li></ol><h2 id="创建新应用" tabindex="-1"><a class="header-anchor" href="#创建新应用" aria-hidden="true">#</a> 创建新应用</h2><ul><li><code>VsCode</code>中<code>F1</code>打开命令面板，输入<code>flutter</code>选择<code>Flutter:New Project</code>，输入要创建的<code>Project</code>名称，然后放入指定的项目位置，等待项目创建后，应用程序的代码位于<code>lib/main.dart</code></li><li>或者使用<code>PowerShell</code>，<code>flutter create xxxprojectname</code></li></ul><h2 id="运行应用" tabindex="-1"><a class="header-anchor" href="#运行应用" aria-hidden="true">#</a> 运行应用</h2><p>在<code>VsCode</code>中<code>F5</code>打开调试窗口，点击运行，等待应用启用，成功后将在设备或模拟器上看到应用程序</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">flutter run</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>R 键：重新加载</li><li>P 键：显示网格</li><li>O 键：切换<code>Android</code>和<code>ios</code>的预览模式</li><li>Q 键：退出调试预览模式</li></ul><h2 id="直接开启虚拟机" tabindex="-1"><a class="header-anchor" href="#直接开启虚拟机" aria-hidden="true">#</a> 直接开启虚拟机</h2><ol><li>找到<code>emulator.exe</code>这个程序，<code>C:\\Users\\Administrator\\AppData\\Local\\Android\\Sdk\\emulator</code></li><li>查看<code>AVD</code>的设备名称，进入编辑模式并复制名称，新建一个<code>xxx.bat</code>文件到桌面，<code>AVD</code>名称空格改为下划线</li></ol><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">C:\\Users\\Administrator\\AppData\\Local\\Android\\Sdk\\emulator\\</span><span style="color:#56B6C2;">emulator.exe</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">netdelay none </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">netspeed full </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">avd Pixel_2_XL_API_28</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>保存后双击就可以迅速打开虚拟机了</p><ul><li>-netdelay none 设置模拟器的网络延迟</li><li>-netspeed full 设置网络加速值 或者在<code>Vscode</code>的点击右下角<code>No Devices</code>，选择显示出来的在电脑上已安装的虚拟机</li></ul><h2 id="flutter-更新到最新版" tabindex="-1"><a class="header-anchor" href="#flutter-更新到最新版" aria-hidden="true">#</a> flutter 更新到最新版</h2><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">flutter upgrade</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者下载最近版本压缩包，将旧的删除后解压到原来位置</p><h2 id="使用第三方模拟器-不安装-android-studio" tabindex="-1"><a class="header-anchor" href="#使用第三方模拟器-不安装-android-studio" aria-hidden="true">#</a> 使用第三方模拟器，不安装 android studio</h2>`,16),B=l("<li>在官网下拉，在<code>Command line tools only</code>里下载对应平台的<code>sdkManager</code></li><li>解压，新建环境变量<code>JAVA_HOME</code>，值为<code>SDK</code>安装目录，如<code>D:\\android\\Sdk</code></li><li>在环境变量<code>Path</code>中加入<code>%ANDROID_HOME%\\tools</code></li><li>在<code>android/sdk/tools/bin</code>目录下，在终端中执行命令<code>sdkmanager --list</code>查看已安装的和可以安装的列表</li><li>根据列表下载包，我这里是下的安卓<code>28</code>，执行<code>sdkmanager &quot;platform-tools&quot; &quot;platforms;android-28&quot;</code> 、<code>sdkmanager &quot;build-tools;28.0.3&quot;</code></li>",5),A=e("code",null,"Path",-1),f=e("code",null,"%ANDROID_HOME%\\platform-tools和%ANDROID_HOME%\\build-tools",-1),x=e("code",null,"gradle",-1),k=e("code",null,"C:\\Users\\.gradle\\wrapper\\dists\\gradle-xxx-all\\xxx",-1),D={href:"http://services.gradle.org/distributions/",target:"_blank",rel:"noopener noreferrer"},C=e("code",null,".zip",-1),F=e("code",null,"android/build.gradle",-1),O=e("code",null,"buildscript",-1),E=e("code",null,"llproject",-1),S=e("code",null,"mavenCentral()",-1),w=e("code",null,"google()",-1),q=l(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E06C75;">    repositories {</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#61AFEF;">google</span><span style="color:#E06C75;">()</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#61AFEF;">jcenter</span><span style="color:#E06C75;">()</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#7F848E;font-style:italic;">// maven { url &#39;https://maven.aliyun.com/repository/google&#39; }</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#7F848E;font-style:italic;">// maven { url &#39;https://maven.aliyun.com/repository/jcenter&#39; }</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#7F848E;font-style:italic;">// maven { url &#39;http://maven.aliyun.com/nexus/content/groups/public&#39; }</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删<code>./flutter/bin/cache/lockfile</code></p><h2 id="命令装-sdk-并配安卓虚拟机" tabindex="-1"><a class="header-anchor" href="#命令装-sdk-并配安卓虚拟机" aria-hidden="true">#</a> 命令装 sdk 并配安卓虚拟机</h2><ol><li>从<code>android</code>上下载<code>cmdline-tools</code>包，解压到目录<code>D:\\AndroidSdk\\cmdline-tools\\latest</code></li><li>新增环境变量<code>ANDROID_SDK_ROOT</code>，值为<code>D:\\AndroidSdk</code></li><li>新增<code>Path</code>:</li></ol><ul><li>%ANDROID_SDK_ROOT%\\cmdline-tools\\latest\\bin;</li><li>%ANDROID_SDK_ROOT%\\build-tools;</li><li>%ANDROID_SDK_ROOT%\\platform-tools;</li><li>%ANDROID_SDK_ROOT%\\emulator</li></ul><ol start="4"><li><code>sdkmanager --list</code> 查看已安装和可以安装的包 装包<code>sdkmanager &quot;platform-tools&quot; &quot;platforms;android-29&quot; </code>、<code>sdkmanager &quot;build-tools;29.0.3&quot;</code></li><li>装<code>sdkmanager &quot;system-images;android-29;google_apis;x86&quot;</code> 创安卓虚拟机<code>avdmanager create avd --force --name my_phone -k &quot;system-images;android-29;google_apis;x86&quot; -d &quot;Nexus 6P&quot; -c 2048M</code> 查看虚拟机列表<code>avdmanager list avd</code> 运行虚拟机<code>emulator -avd my_phone</code></li><li>插入<code>SD</code>卡</li></ol><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">mksdcard  </span><span style="color:#D19A66;">200M</span><span style="color:#ABB2BF;"> sdcard.img</span></span>
<span class="line"><span style="color:#ABB2BF;">emulator </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">avd my_phone </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">sdcard sdcard.img</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function V(j,N){const s=n("ExternalLinkIcon");return c(),i("div",null,[r,e("ul",null,[e("li",null,[o("选择"),e("a",p,[o("Accept License Agreement"),d(s)])]),u]),h,e("ul",null,[m,e("li",null,[e("a",_,[o("汉化"),d(s)]),o(" ，将"),v,o("文件放到软件安装路径下的"),b,o("目录中，重启软件")]),g]),y,e("ol",null,[B,e("li",null,[o("配置环境变量"),A,o("，加入"),f,o(" 下载"),x,o("到"),k,o("，将"),e("a",D,[o("下载"),d(s)]),o("下来的"),C,o("文件放入。 在项目的"),F,o("的"),O,o("和 a"),E,o("同时加上 "),S,o(),w])]),q])}const I=a(t,[["render",V],["__file","环境.html.vue"]]);export{I as default};
