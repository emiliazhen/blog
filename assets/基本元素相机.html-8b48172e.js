import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,a as l}from"./app-fd217ae5.js";const o="/blog/assets/view-de1e26c5.png",p={},e=l(`<p>我们常用的相机正交相机(<code>OrthographicCamera</code>)和透视相机(<code>PerspectiveCamera</code>)两种相机，用于来捕获场景内显示的物体模型。它们有一些通用的属性和方法：</p><p>由于相机都是继承至<code>THREE.Object3D</code>对象的，所以像设置位置的<code>position</code>属性、<code>rotation</code>旋转和<code>scale</code>缩放属性，可以直接对相机对象设置。我们甚至还可以使用<code>add()</code>方法，给相机对象添加子类，移动相机它的子类也会跟随着一块移动，我们可以使用这个特性制作一些比如 HUD 类型的显示界面。</p><p>调整相机朝向</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">THREE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Vector3</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lookAt</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">THREE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Vector3</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以将相机的朝向改为模型网格的<code>position</code>，如果物体的位置发生了变化，相机的焦点方向也会跟随变动</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">mesh</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">THREE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Mesh</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">geometry</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">material</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">mesh</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">position</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//或者</span></span>
<span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lookAt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">mesh</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">position</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="orthographiccamera-正交相机" tabindex="-1"><a class="header-anchor" href="#orthographiccamera-正交相机" aria-hidden="true">#</a> OrthographicCamera 正交相机</h2><p>使用正交相机<code>OrthographicCamera</code>渲染出来的场景，所有的物体和模型都按照它固有的尺寸和精度显示，一般使用在工业要求精度或者<code>2D</code>平面中，因为它能完整的显示物体应有的尺寸。 正交相机显示的范围是一个立方体结构，只要确定<code>top</code>，<code>left</code>，<code>right</code>，<code>bottom</code>，<code>near</code>和<code>far</code>六个值，我们就能确定当前相机捕获场景的区域，在这个区域外面的内容不会被渲染</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// left, right, top, bottom, near, far</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">orthographicCamera</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">THREE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">OrthographicCamera</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">scene</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">orthographicCamera</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//一般不需要将相机放置到场景当中，如果需要添加子元素等一些特殊操作，还是需要add到场景内</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正常情况相机显示的内容需要和窗口显示的内容同样的比例才能够显示没有被拉伸变形的效果</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//设置显示相机前方1000高的内容</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerWidth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerHeight</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//计算场景的宽高比</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">orthographicCamera</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">THREE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">OrthographicCamera</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2000</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//根据比例计算出left，top，right，bottom的值</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以动态的修改正交相机的一些属性，注意修改完以后需要调用相机<code>updateProjectionMatrix()</code>方法来更新相机显存里面的内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//设置显示相机前方1000高的内容</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerWidth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerHeight</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//计算场景的宽高比</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">orthographicCamera</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">THREE</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">OrthographicCamera</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">//实例化一个空的正交相机</span></span>
<span class="line"><span style="color:#E5C07B;">orthographicCamera</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//设置left的值</span></span>
<span class="line"><span style="color:#E5C07B;">orthographicCamera</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">right</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//设置right的值</span></span>
<span class="line"><span style="color:#E5C07B;">orthographicCamera</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">top</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//设置top的值</span></span>
<span class="line"><span style="color:#E5C07B;">orthographicCamera</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">bottom</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">frustumSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//设置bottom的值</span></span>
<span class="line"><span style="color:#E5C07B;">orthographicCamera</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">near</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//设置near的值</span></span>
<span class="line"><span style="color:#E5C07B;">orthographicCamera</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">far</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2000</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//设置far的值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//注意，最后一定要调用updateProjectionMatrix()方法更新</span></span>
<span class="line"><span style="color:#E5C07B;">orthographicCamera</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">updateProjectionMatrix</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//显示区域尺寸变了，我们也需要修改渲染器的比例</span></span>
<span class="line"><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setSize</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerWidth</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerHeight</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="perspectivecamera-透视相机" tabindex="-1"><a class="header-anchor" href="#perspectivecamera-透视相机" aria-hidden="true">#</a> PerspectiveCamera 透视相机</h2><p>透视相机是最常用的也是模拟人眼的视角的一种相机，它所渲染生成的页面是一种近大远小的效果 <img src="`+o+'" alt="img"></p>',15),r=[e];function c(t,B){return a(),n("div",null,r)}const d=s(p,[["render",c],["__file","基本元素相机.html.vue"]]);export{d as default};
